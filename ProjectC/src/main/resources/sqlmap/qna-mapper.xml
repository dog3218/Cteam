<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="qna.mapper">

	<!-- QnA에 대한 신규 답글 등록(저장) -->
	<update id="reply_insert"> 
		update qna
		set reply_content=#{reply_content}, replydate=to_char(sysdate), replyid=#{replyid}, root=#{root}
		where id=#{id}
		
	</update>
 
	<!-- QnA 게시글 내용 수정 -->
	<update id="update">
		update qna set title=#{title}, content=#{content}
		where id = #{id}
	</update>

	<!-- ID 해당 QnA글 삭제 -->
	<delete id="delete">
		delete from qna
		where id = #{id}	
	</delete>
	
	<!-- 상세화면 조회 전 조회수 증가(변경) -->
	<update id="read">
		update qna set readcnt = readcnt + 1
		where id = #{id}	
	</update>

	<!-- QnA글 상세 내용 조회 -->
	<select id="detail" resultType="web_qna.QnaVO">
		select q.*, ( select name from member where member.email = q.writer ) name 
		from qna q
		where id = #{id}
	
	</select>
	
	<!-- QnA사항 신규 글 등록 -->
	<insert id="insert">
		insert into qna (title, content, writer, reply_content)
		values (#{title}, #{content}, #{writer}, #{reply_content, jdbcType=VARCHAR})
		
<!-- 		update to qna
		set root=(select id from qna where title=#{title}) -->
	</insert>

	<sql id = 'where_search'>
		<!-- 전체에 대한 검색 처리 -->
		<if test="search == 'all' ">
			where title like '%'||#{keyword}||'%'
			or content like '%'||#{keyword}||'%'
			or writer in (select id from member where name like '%'||#{keyword}||'%' )
		</if>
		
		<!-- 제목 또는 내용에 대한 검색 처리 -->
		<if test="search == 'title' or search == 'content' ">
			where ${search} like '%'||#{keyword}||'%'
		</if>
	
		<!-- 작성자에 대한 검색 처리 -->
		<if test="search == 'writer' ">
			where writer in (select id from member where name like '%'||#{keyword}||'%' )
		</if>
	</sql>

	<!-- 전체 QnA글 수 조회 -->
	<select id="totalList" resultType="integer">
		select count(*) from qna <include refid="where_search" />
	</select>

	<!-- 페이지 처리된 글 목록 조회 -->	
	<select id="list" resultType="web_qna.QnaVO">
		select * 
		from (select rownum no, n.*, ( select name from member where member.email = writer ) name 
				from ( select * from qna <include refid="where_search" /> 
				order by root) n
				order by no desc)
		where no between #{beginList} and #{endList}
	</select>
	<!-- no 값이 페이지 시작 목록번호와 끝 목록 번호 사이에 있는 값을 조회 -->

	<!-- 공지사항 전체 글 목록 조회 -->
<!-- 	<select id="list" resultType="notice.NoticeVO"> -->
<!-- 		select rownum no, n.*,  -->
<!-- 			(select name from s_member where s_member.id = writer ) name -->
<!-- 		from (select * from notice order by id) n -->
<!-- 		order by no desc -->
<!-- 	</select> -->

</mapper>