<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="community.mapper">

<!-- 댓글 삭제 처리 -->
<delete id="comment_delete">
	delete from comments
	where id=#{id}
</delete>

<!-- 댓글 수정 저장처리 -->
<update id="comment_update">
	update comments set content=#{content}, title=#{title}
	where id=#{id}
</update>

<!-- 댓글 목록 조회 -->
<select id="comment_list" resultType="gm_community.CommunityCommentVO">
	select c.*, (select name from member where member.email = c.writer ) name
	from comments c
	where pno = #{pno}
	order by id desc
</select>

<!-- 댓글 저장 처리 _ 내용, 작성자, 원글 정보를 저장 -->
<insert id="comment_insert">
	insert into comments(id, content, writer, pno)
	values (#{content, jdbcType=VARCHAR}, #{writer, jdbcType=VARCHAR}, #{pno})
</insert>

<!-- 해당 글을 수정 저장처리 -->
<update id="update">
	update community set title=#{title}, content = #{content}, subject=#{subject}
			, filename1=#{filename1 , jdbcType=VARCHAR }, filepath1=#{filepath1, jdbcType=VARCHAR}
			, filename2=#{filename2 , jdbcType=VARCHAR }, filepath2=#{filepath2, jdbcType=VARCHAR}
			, filename3=#{filename3 , jdbcType=VARCHAR }, filepath3=#{filepath3, jdbcType=VARCHAR}
	where id = #{id}		
</update>

<!-- 해당 글을 삭제 -->
<delete id="delete">
	delete from community
	where id = #{id}
</delete>

<!-- 해당 글의 조회수 증가 -->
<update id="read">
	update community set readcnt = readcnt + 1
	where id = #{id}
</update>

<!-- 해당 글의 상세 정보 조회 -->
<select id="detail" resultType="gm_community.CommunityVO">
	select b.*, (select name from member where member.email = b.writer) name
	from community b
	where id = #{id}
</select>

<!-- 신규 글 저장 -->
<insert id="insert">
	insert into community (title, content, writer, subject, filename1, filepath1, filename2, filepath2, filename3, filepath3 )
	values ( #{title}, #{content}, #{writer}, #{subject}
			, #{filename1 , jdbcType=VARCHAR }, #{filepath1, jdbcType=VARCHAR}
			, #{filename2 , jdbcType=VARCHAR }, #{filepath2, jdbcType=VARCHAR}
			, #{filename3 , jdbcType=VARCHAR }, #{filepath3, jdbcType=VARCHAR} )
</insert>

<sql id = 'where_search'>
	<if test="search=='title' or search=='content' ">
		where ${search} like '%'|| #{keyword} || '%' 
	</if>
	<if test="search == 'writer' ">
		where <include refid="search_writer" />		
	</if>
	<if test="search == 'all' ">
		where title like '%'|| #{keyword} ||'%'
		or content like '%'|| #{keyword} ||'%'
		or <include refid="search_writer" /> 
		<!--  writer in ( select id from s_member where name like '%'|| #{keyword} ||'%' ) -->
	</if>
</sql>

<sql id='search_writer'>
	writer in ( select id from member where name like '%'|| #{keyword} ||'%' )
</sql>

<!-- 전체 게시글 수 조회 -->
<select id="totalList" resultType="integer">
	select count(*) from community <include refid="where_search" />
</select>

<!-- 전체 게시글 조회 -->

<select id="list" resultType="gm_community.CommunityVO">
	select *
	from (select rownum no, b.*, (select name from member where email = b.writer) name
			from (select * from community <include refid="where_search" />
					order by id ) b
			order by no desc)
	where no between #{beginList} and #{endList}
</select>

</mapper>