package com.hanul.app.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import com.hanul.app.dto.MemberDTO;

public class AnDao {
	
	// 데이터 베이스와 연동 : 데이터베이스 초기화 해줌
	DataSource dataSource;
	
	// 생성자를 통해서 데이터베이스 드라이버를 선언해준다
	public AnDao() {
		try {
			Context context = new InitialContext();
			dataSource = (DataSource)context.lookup("java:/comp/env/teamAll");			
			
		}catch(NamingException e) {
			e.getMessage();
		}
		
	}	
	
	// 8. 회원가입 : anJionCommand에서 값을 넘겨받는다
	public int anJoin(String id, String nickname, String password, String address, String kind, String email, String idnumber, String filename, String name) {
		// 데이터베이스와 연동하여 원하는 결과물을 얻는다.
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		int state = -100;
		
		try {
			connection = dataSource.getConnection();
			String query = "insert into member(id, nickname, password, address, kind, email, idnumber, filename, name) " 
						+ " values('" + id + "', '" + nickname + "', '" + password  + "', '" 
						+ address + "', '" + kind + "', '" + email + "', '" + idnumber + "', '"+filename +"', '"+name+"')";
			preparedStatement = connection.prepareStatement(query);
			state = preparedStatement.executeUpdate();
			
			if(state > 0) {
				System.out.println("회원가입성공!!!");
			}else {
				System.out.println("회원가입실패 ㅜㅜ");
			}
			
		}catch(Exception e) {
			System.out.println(e.getMessage());
		}finally {
			try {
				if(preparedStatement != null) {
					preparedStatement.close();
				}
				if(connection != null) {
					connection.close();
				}
				
			}catch(Exception e) {
				e.getMessage();
			}
		}
		
		// 9. 원하는 값을 넘겨줌
		return state;
		
	}
	
	// 8. 로그인 : anLoginCommand에서 값을 넘겨받는다
		public MemberDTO anLogin(String idin, String passwordin) {
			// 데이터베이스와 연동하여 원하는 결과물을 얻는다.
			MemberDTO memberDTO = null;
			Connection connection = null;
			PreparedStatement prepareStatement = null;
			ResultSet resultSet = null;		
			
			try {
				connection = dataSource.getConnection();
				String query = "select * "					
								+ " from member" 
								+ " where id = '" + idin + "' and password = '" + passwordin + "' ";
				prepareStatement = connection.prepareStatement(query);
				resultSet = prepareStatement.executeQuery();
				
				while (resultSet.next()) {
					String id = resultSet.getString("id");
					String nickname = resultSet.getString("nickname");
					String name = resultSet.getString("name");
					String email = resultSet.getString("email");
					String address = resultSet.getString("address");
					String filename = resultSet.getString("filename");
					String idnumber = resultSet.getString("idnumber");

					memberDTO = new MemberDTO(id, nickname, address, email, idnumber, filename, name);							
				}	
				
				System.out.println("MemberDTO id : " + memberDTO.getID());
				
			} catch (Exception e) {
				
				System.out.println(e.getMessage());
			} finally {
				try {			
					
					if (resultSet != null) {
						resultSet.close();
					}
					if (prepareStatement != null) {
						prepareStatement.close();
					}
					if (connection != null) {
						connection.close();
					}	

				} catch (Exception e) {
					e.printStackTrace();
				} finally {

				}
			}

			return memberDTO;
			
		}

		public ArrayList<MemberDTO> anSelectMember() {
			
			// 데이터베이스와 연동하여 원하는 결과물을 얻는다.
			ArrayList<MemberDTO> dtos = new ArrayList<MemberDTO>();
			Connection connection = null;
			PreparedStatement prepareStatement = null;
			ResultSet resultSet = null;		
			
			try {
				connection = dataSource.getConnection();
				String query = "select * from member" ;
				prepareStatement = connection.prepareStatement(query);
				resultSet = prepareStatement.executeQuery();
				
				while (resultSet.next()) {
					String id = resultSet.getString("id");
					String nickname = resultSet.getString("nickname");
					String name = resultSet.getString("name");
					String email = resultSet.getString("email");
					String address = resultSet.getString("address");
					String filename = resultSet.getString("filename");
					String idnumber = resultSet.getString("idnumber");

					dtos.add(new MemberDTO(id, nickname, address, email, idnumber, filename, name));							
				}	
				
				System.out.println("dtosSize : " + dtos.size());
				
			} catch (Exception e) {
				
				System.out.println(e.getMessage());
			} finally {
				try {			
					
					if (resultSet != null) {
						resultSet.close();
					}
					if (prepareStatement != null) {
						prepareStatement.close();
					}
					if (connection != null) {
						connection.close();
					}	

				} catch (Exception e) {
					e.printStackTrace();
				} finally {

				}
			}			
			
			return dtos;
			
		}

}












