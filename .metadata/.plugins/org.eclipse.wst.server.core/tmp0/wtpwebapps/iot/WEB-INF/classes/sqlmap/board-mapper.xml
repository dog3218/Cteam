<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.mapper">

<select id="comment_list" resultType="board.BoardCommentVO">
	select c.*, (select name from s_member where s_member.id = c.writer) name
	 from board_comment c
	where pid = #{pid}
	order by id desc
</select>

<!--게시글에 달린 댓글 저장(원글, 내용, 작성자 정보)  -->
<insert id="comment_insert">
	insert into board_comment(content, writer, pid)
	values (#{content}, #{writer}, #{pid})
</insert>

<!-- 해당 글을 수정 저장처리 -->
<update id="update">
	update board set title=#{title}, content = #{content}
			, filename = #{filename, jdbcType=VARCHAR}
			, filepath = #{filepath, jdbcType=VARCHAR}
	where id = #{id}		
</update>

<!-- 해당 글을 삭제 -->
<delete id="delete">
	delete from board
	where id = #{id}
</delete>

<!-- 해당 글의 조회수 증가 -->
<update id="read">
	update board set readcnt = readcnt + 1
	where id = #{id}
</update>

<!-- 해당 글의 상세 정보 조회 -->
<select id="detail" resultType="board.BoardVO">
	select b.*, (select name from s_member where s_member.id = b.writer) name
	from board b
	where id = #{id}
</select>

<!-- 방명록 신규 글 저장 -->
<insert id="insert">
	insert into board (title, content, writer, filename, filepath)
	values ( #{title}, #{content}, #{writer}
			, #{filename , jdbcType=VARCHAR }, #{filepath, jdbcType=VARCHAR} )
</insert>

<sql id = 'where_search'>
	<if test="search=='title' or search=='content' ">
		where ${search} like '%'|| #{keyword} || '%' 
	</if>
	<if test="search == 'writer' ">
		where <include refid="search_writer" />		
	</if>
	<if test="search == 'all' ">
		where title like '%'|| #{keyword} ||'%'
		or content like '%'|| #{keyword} ||'%'
		or <include refid="search_writer" /> 
		<!--  writer in ( select id from s_member where name like '%'|| #{keyword} ||'%' ) -->
	</if>
</sql>

<sql id='search_writer'>
	writer in ( select id from s_member where name like '%'|| #{keyword} ||'%' )
</sql>

<!-- 전체 게시글 수 조회 -->
<select id="totalList" resultType="integer">
	select count(*) from board <include refid="where_search" />
</select>

<!-- 전체 게시글 조회 -->

<select id="list" resultType="board.BoardVO">
	select *
	from (select rownum no, b.*, (select name from s_member where id = b.writer) name
			from (select * from board <include refid="where_search" />
					order by id ) b
			order by no desc)
	where no between #{beginList} and #{endList}
</select>

</mapper>