<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="notice.mapper">

	<!-- 공지글에 대한 신규 답글 등록(저장) -->
	<insert id="reply_insert">
	
	<!-- 오라클의 경우 여러 쿼리문으로 작성할 경우 명령행을 구분하기 위해 ; 을 붙여 사용 -->
	<![CDATA[
		{
			call declare
			begin
		
				update notice set step = step + 1 where root = #{root} and step > #{step};
			
				insert into notice (id, title, content, writer, filename, filepath, root, step, indent)
				values (seq_notice.nextval, #{title}, #{content}, #{writer},
						#{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR},
						#{root}, #{step}+1, #{indent}+1);
			end
		}
	]]>
	</insert>


	<!-- 공지 게시글 내용 수정 -->
	<update id="update">
		update notice set title=#{title}, content=#{content}
				, filename = #{filename, jdbcType=VARCHAR}
				, filepath = #{filepath, jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<!-- ID 해당 공지글 삭제 -->
	<delete id="delete">
		delete from notice
		where id = #{id}	
	</delete>
	
	<!-- 상세화면 조회 전 조회수 증가(변경) -->
	<update id="read">
		update notice set readcnt = readcnt + 1
		where id = #{id}	
	</update>

	<!-- 공지글 상세 내용 조회 -->
	<select id="detail" resultType="notice.NoticeVO">
		select notice.*, ( select name from s_member where s_member.id = notice.writer ) name 
		from notice
		where id = #{id}
	
	</select>
	
	<!-- 공지사항 신규 글 등록 -->
	<insert id="insert">
		insert into notice (id, root, title, content, writer
					, filename, filepath )
		values ( seq_notice.nextval, seq_notice.currval, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR }, #{filepath, jdbcType=VARCHAR } )
	</insert>

	<sql id = 'where_search'>
		<!-- 전체에 대한 검색 처리 -->
		<if test="search == 'all' ">
			where title like '%'||#{keyword}||'%'
			or content like '%'||#{keyword}||'%'
			or writer in (select id from s_member where name like '%'||#{keyword}||'%' )
		</if>
		
		<!-- 제목 또는 내용에 대한 검색 처리 -->
		<if test="search == 'title' or search == 'content' ">
			where ${search} like '%'||#{keyword}||'%'
		</if>
	
		<!-- 작성자에 대한 검색 처리 -->
		<if test="search == 'writer' ">
			where writer in (select id from s_member where name like '%'||#{keyword}||'%' )
		</if>
	</sql>

	<!-- 전체 공지글 수 조회 -->
	<select id="totalList" resultType="integer">
		select count(*) from notice <include refid="where_search" />
	</select>

	<!-- 페이지 처리된 글 목록 조회 -->	
	<select id="list" resultType="notice.NoticeVO">
		select * 
		from (select rownum no, n.*, ( select name from s_member where s_member.id = writer ) name 
				from ( select * from notice <include refid="where_search" /> 
				order by root, step desc ) n
				order by no desc)
		where no between #{beginList} and #{endList}
	</select>
	<!-- no 값이 페이지 시작 목록번호와 끝 목록 번호 사이에 있는 값을 조회 -->

	<!-- 공지사항 전체 글 목록 조회 -->
<!-- 	<select id="list" resultType="notice.NoticeVO"> -->
<!-- 		select rownum no, n.*,  -->
<!-- 			(select name from s_member where s_member.id = writer ) name -->
<!-- 		from (select * from notice order by id) n -->
<!-- 		order by no desc -->
<!-- 	</select> -->

</mapper>